<#@ template debug="false" hostspecific="true" language="C#" #>  
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Security" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Security.Cryptography" #>
<#@ output extension=".cs" #>
<#
    var stringsFolder = Host.ResolvePath(@"");
    var passwordsFilePath = stringsFolder + @"..\..\..\..\ServicesKeys.txt";

    if (!File.Exists(passwordsFilePath))
    {
        throw new FileNotFoundException("Attention, the file \"ServicesKeys.txt\" is not found. Please read carefully the \"ServicesKeys-sample.txt\" file in the root of the repository.");
    }

    var lineCount = 0;
    var settingsToSecure = new List<Tuple<string, string>>();
    var lines = File.ReadLines(passwordsFilePath);

    foreach (var line in lines)
    {
        lineCount++;
        if (string.IsNullOrWhiteSpace(line) || line.Trim().StartsWith("#") || !line.Contains(":"))
        {
            continue;
        }

        var settingName = line.Split(':').First();
        var settingValue = line.Substring(settingName.Length + 1);

        if (string.IsNullOrWhiteSpace(settingName) || settingName.Contains(" "))
        {
            throw new Exception("The \"ServicesKeys.txt\" file looks corrupt lines " + lineCount);
        }

        settingsToSecure.Add(new Tuple<string, string>(settingName, settingValue));
    }
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaZword.Core
{
    internal static class ServicesKeys 
    {
<#
    foreach (var setting in settingsToSecure)
    {
#>
        internal const string <#= setting.Item1 #> = "<#= setting.Item2 #>";
<#
    }
#>
    }
}