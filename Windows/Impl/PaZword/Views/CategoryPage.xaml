<Page
    x:Name="RootPage"
    x:Class="PaZword.Views.CategoryPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:converters="using:PaZword.Core.UI.Converters"
    xmlns:models="using:PaZword.Api.Models"
    xmlns:modelsLocal="using:PaZword.Models"
    xmlns:wuxdata="using:Windows.UI.Xaml.Data" xmlns:i="using:Microsoft.Xaml.Interactivity" xmlns:ui="using:PaZword.Core.UI"
    mc:Ignorable="d"
    SizeChanged="Page_SizeChanged"
    DataContext="{Binding Path=CategoryPage, Source={StaticResource ViewModelLocator}}">
    <Page.Resources>
        <JumpListItemBackgroundConverter x:Key="JumpListItemBackgroundConverter" Enabled="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <converters:PageWidthToOpenPaneLengthConverter x:Key="PageWidthToOpenPaneLengthConverter" PaneWidth="280"/>
        <converters:NullToBooleanConverter x:Key="InvertedNullToBooleanConverter" IsInverted="True"/>
        <converters:Base64ImageToAccountIconSourceConverter x:Key="Base64ImageToAccountIconSourceConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" IsInverted="True"/>
        <converters:InvertedBooleanConverter x:Key="InvertedBooleanConverter"/>

        <MenuFlyout x:Name="AccountGridViewContextMenu">
            <MenuFlyoutItem
                x:Name="DeleteMenuFlyoutItem"
                Text="{x:Bind ViewModel.Strings.Delete}"
                Command="{x:Bind ViewModel.DeleteAccountCommand}"/>
        </MenuFlyout>
    </Page.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="VeryNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommandBar.Margin" Value="0,32,0,0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Border Background="{ThemeResource AccountListBackground}" Margin="0,-228,0,0"/>

        <SplitView
            PanePlacement="Right"
            DisplayMode="Inline"
            OpenPaneLength="{x:Bind RealActualWidth, Converter={StaticResource PageWidthToOpenPaneLengthConverter}, Mode=OneWay}"
            IsPaneOpen="{x:Bind ViewModel.CommonViewModel.SelectedAccount, Converter={StaticResource InvertedNullToBooleanConverter}, Mode=OneWay}">
            <i:Interaction.Behaviors>
                <ui:EventToCommandBehavior 
                    Event="PaneClosing"
                    Command="{x:Bind ViewModel.PaneClosingCommand}" 
                    PassArguments="true"/>
            </i:Interaction.Behaviors>
            <SplitView.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid 
                        Grid.Row="1"
                        Visibility="{x:Bind ViewModel.CommonViewModel.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <StackPanel
                            Grid.Column="1"
                            Grid.Row="1">
                            <Image
                                Source="/Assets/Dinosaur.png"
                                Height="125"
                                Width="125"/>
                            <TextBlock
                                Margin="0,24,0,0"
                                TextWrapping="WrapWholeWords"
                                TextAlignment="Center"
                                Text="{x:Bind ViewModel.Strings.Tutorial}"
                                Style="{ThemeResource SubtitleTextBlockStyle}"/>
                        </StackPanel>
                    </Grid>
                    <SemanticZoom
                        x:Name="SemanticZoom"
                        Grid.Row="1"
                        TabIndex="1"
                        Visibility="{x:Bind ViewModel.CommonViewModel.IsEmpty, Converter={StaticResource InvertedBooleanToVisibilityConverter}, Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.CommonViewModel.IsEditing, Mode=OneWay, Converter={StaticResource InvertedBooleanConverter}}">
                        <SemanticZoom.ZoomedInView>
                            <GridView
                                x:Name="AccountsGridView"
                                IsItemClickEnabled="True"
                                IsSynchronizedWithCurrentItem="False"
                                Padding="6"
                                ItemContainerStyle="{StaticResource LargeMarginGridViewItem}"
                                ItemsSource="{x:Bind ViewModel.CommonViewModel.Accounts.View, Mode=OneWay}"
                                SelectedItem="{x:Bind ViewModel.CommonViewModel.SelectedAccount, Mode=TwoWay}"
                                AutomationProperties.Name="{x:Bind ViewModel.Strings.AutomationAccountListDescription}">
                                <GridView.GroupStyle>
                                    <GroupStyle HidesIfEmpty="True">
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate x:DataType="modelsLocal:AccountGroup">
                                                <TextBlock
                                                    Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
                                                    FontFamily="Segoe UI Symbol"
                                                    FontSize="25"
                                                    Margin="5"
                                                    Text="{x:Bind GroupName}"/>
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </GridView.GroupStyle>
                                <GridView.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition/>
                                        <RepositionThemeTransition/>
                                    </TransitionCollection>
                                </GridView.ItemContainerTransitions>
                                <GridView.ItemTemplate>
                                    <DataTemplate x:DataType="models:Account">
                                        <Border
                                            Width="256"
                                            Height="84"
                                            AutomationProperties.Name="{x:Bind Title}">
                                            <Grid
                                                Margin="10"
                                                Background="Transparent"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                IsHoldingEnabled="True"
                                                IsRightTapEnabled="True"
                                                Holding="AccountGridViewItemGrid_Holding"
                                                RightTapped="AccountGridViewItemGrid_RightTapped">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="64"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Image
                                                    Grid.Column="0"
                                                    Height="64"
                                                    DataContext="{Binding Base64Icon, Mode=OneWay, Converter={StaticResource Base64ImageToAccountIconSourceConverter}}"
                                                    Source="{Binding Result}"/>
                                                <StackPanel
                                                    Grid.Column="1"
                                                    Margin="10,0,0,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left">
                                                    <TextBlock
                                                        Text="{x:Bind Title}"
                                                        TextWrapping="WrapWholeWords"
                                                        TextTrimming="CharacterEllipsis"
                                                        FontWeight="Medium"
                                                        FontSize="16"
                                                        MaxHeight="48"/>
                                                    <TextBlock
                                                        Text="{x:Bind AccountSubtitle}"
                                                        Foreground="{ThemeResource AccountSubtitleForegroundColorBrush}"
                                                        FontFamily="Segoe UI Light"
                                                        TextWrapping="NoWrap"
                                                        TextTrimming="CharacterEllipsis"
                                                        FontSize="14"/>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <GridView
                                Padding="6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                                ItemContainerStyle="{StaticResource LargeMarginGridViewItem}"
                                ItemsSource="{x:Bind ViewModel.CommonViewModel.Accounts.View.CollectionGroups, Mode=OneWay}">
                                <GridView.ItemContainerTransitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition/>
                                        <RepositionThemeTransition/>
                                    </TransitionCollection>
                                </GridView.ItemContainerTransitions>
                                <GridView.ItemTemplate>
                                    <DataTemplate x:DataType="wuxdata:ICollectionViewGroup">
                                        <!-- For unknown reason, Foregroung color doesn't update when the Account's ObservableCollection
                                        has a change. // TODO: Idea to fix it: Create a new UI control "JumpListItemControl" that would take an
                                        AccountGroup as view model, and would manually RaisePropertyChanged when a change happen
                                        in the collection. -->
                                        <TextBlock
                                            FontFamily="Segoe UI Symbol"
                                            FontSize="30"
                                            Margin="5"
                                            Style="{StaticResource SubtitleTextBlockStyle}"
                                            Foreground="{Binding Mode=OneWay, Converter={StaticResource JumpListItemBackgroundConverter}}"
                                            Text="{x:Bind ((modelsLocal:AccountGroup)Group).GroupName}"
                                            AutomationProperties.AccessibilityView="Raw"/>
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                    <CommandBar
                        x:Name="CommandBar"
                        Grid.Row="0"
                        TabIndex="0"
                        Margin="0,-47,0,0"
                        ClosedDisplayMode="Compact"
                        Background="Transparent"
                        DefaultLabelPosition="Right"
                        IsEnabled="{x:Bind ViewModel.CommonViewModel.IsEditing, Mode=OneWay, Converter={StaticResource InvertedBooleanConverter}}">
                        <AppBarButton
                            Icon="Add"
                            Label="{x:Bind ViewModel.Strings.AddAcount}"
                            Command="{x:Bind ViewModel.AddAccountCommand}">
                            <AppBarButton.KeyboardAccelerators>
                                <KeyboardAccelerator Key="N" Modifiers="Control"/>
                            </AppBarButton.KeyboardAccelerators>
                        </AppBarButton>
                        <AppBarButton
                            Icon="Shuffle"
                            Label="{x:Bind ViewModel.Strings.GeneratePassword}"
                            Command="{x:Bind ViewModel.GeneratePasswordCommand}"/>
                    </CommandBar>
                    <Grid
                        x:Name="OverlayGrid"
                        Grid.RowSpan="11"
                        Background="{ThemeResource OverlayBackgroundColorBrush}"
                        Visibility="{x:Bind ViewModel.CommonViewModel.IsEditing, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <i:Interaction.Behaviors>
                            <ui:EventToCommandBehavior 
                                Event="Tapped"
                                Command="{x:Bind ViewModel.CommonViewModel.EditingOverlayClickedCommand}" 
                                PassArguments="False"/>
                        </i:Interaction.Behaviors>
                    </Grid>
                </Grid>
            </SplitView.Content>
            <SplitView.Pane>
                <Frame
                    x:Name="AccountContentFrame"
                    IsTabStop="False"
                    TabIndex="2">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromHorizontalOffset="30" FromVerticalOffset="0"/>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>
            </SplitView.Pane>
        </SplitView>
    </Grid>
</Page>
